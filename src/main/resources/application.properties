# 数据库连接池配置变量
initialSize=5
minIdle=5
maxIdle=100
maxActive=20
maxWait=60000
timeBetweenEvictionRunsMillis=60000
minEvictableIdleTimeMillis=300000
# 应用服务 WEB 访问端口
server.port=8080
# 应用名称
spring.application.name=foodTraceability
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/food_traceability?serverTimezone=GMT%2D8
spring.datasource.username=root
spring.datasource.password=beichendongmu
##配置一个数据库的名称
#spring.shardingsphere.datasource.names=ds0
##配置第一个数据源具体内容，包含连接池，驱动，地址，用户名和密码
#spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.url=jdbc:mysql://127.0.0.1:3306/food_traceability?serverTimezone=GMT%2D8
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=beichendongmu
## 初始连接数
#spring.shardingsphere.datasource.ds0.initialSize=${initialSize}
## 最小连接数
#spring.shardingsphere.datasource.ds0.minIdle=${minIdle}
## 最大连接池数量
#spring.shardingsphere.datasource.ds0.maxActive=${maxActive}
## 配置获取连接等待超时的时间
#spring.shardingsphere.datasource.ds0.maxWait=${maxWait}
## 用来检测连接是否有效的sql
#spring.shardingsphere.datasource.ds0.validationQuery=SELECT 1 FROM DUAL
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.shardingsphere.datasource.ds0.timeBetweenEvictionRunsMillis=${timeBetweenEvictionRunsMillis}
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.shardingsphere.datasource.ds0.minEvictableIdleTimeMillis=${minEvictableIdleTimeMillis}
## 分表策略
#spring.shardingsphere.sharding.tables.goods.actual-data-nodes=ds0.goods_$->{1..9}
## 指定course表里面主键cid 生成策略  SNOWFLAKE
#spring.shardingsphere.sharding.tables.goods.key-generator.column=goods_id
#spring.shardingsphere.sharding.tables.goods.key-generator.type=SNOWFLAKE
## 指定表分片策略  约定cid值偶数添加到course_1表，如果cid是奇数添加到course_2表
#spring.shardingsphere.sharding.tables.goods.table-strategy.inline.sharding-column=goods_id
#spring.shardingsphere.sharding.tables.goods.table-strategy.inline.algorithm-expression=goods_$->{goods_id % 10}
## 打开sql输出日志
#spring.shardingsphere.props.sql.show=true
## 解决一个实体类无法对应两张表，做覆盖操作。
#spring.main.allow-bean-definition-overriding=true
#七牛云配置
foodTraceability.IconServiceLink=r5yq3xpj4.hd-bkt.clouddn.com/
foodTraceability.accessKey=egx9P5zd9a2GNrhtXUnsSuSg23e4S-XMSw0toNfj
foodTraceability.secretKey=IqqgqouCykKzidSS0wlhN785z2t7BEgoBr9CCxjp
foodTraceability.bucket=bcdm
#mybatis配置
mybatis-plus.type-aliases-package=com.bcdm.foodtraceability.entity
mybatis-plus.mapper-locations=classpath:/mapper/*.xml



